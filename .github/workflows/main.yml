name: Build Test Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:20.10.7
        options: --privileged

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Build server
      run: |
        cd OddEvenServer
        dotnet build --configuration Release
    
    - name: Build client
      run: |
        cd OddEvenClient
        dotnet build --configuration Release

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Restore
      run: |
        cd OddEvenTests
        dotnet restore OddEvenTests.csproj

    - name: Run
      run: |
        cd OddEvenTests
        dotnet test OddEvenTests.csproj --configuration Release

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Build and push Docker images
      run: |
        docker build -t odd-even-server ./OddEvenServer
        docker build -t odd-even-client ./OddEvenClient
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        docker push ${{ secrets.DOCKER_USERNAME }}/odd-even-server:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/odd-even-client:latest
